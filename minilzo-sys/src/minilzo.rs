/* automatically generated by rust-bindgen */

pub type ptrdiff_t = ::libc::c_long;
pub type size_t = ::libc::c_ulong;
pub type wchar_t = ::libc::c_int;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed1 {
    pub __clang_max_align_nonce1: ::libc::c_longlong,
    pub __clang_max_align_nonce2: ::libc::c_double,
}
impl ::std::clone::Clone for Struct_Unnamed1 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_Unnamed1 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type max_align_t = Struct_Unnamed1;
pub type lzo_llong_t__ = ::libc::c_longlong;
pub type lzo_ullong_t__ = ::libc::c_ulonglong;
pub type lzo_uint = ::libc::c_ulong;
pub type lzo_int = ::libc::c_long;
pub type lzo_bool = ::libc::c_int;
pub type lzo_compress_t =
    ::std::option::Option<unsafe extern "C" fn(src: *const ::libc::c_uchar,
                                               src_len: lzo_uint,
                                               dst: *mut ::libc::c_uchar,
                                               dst_len: *mut lzo_uint,
                                               wrkmem: *mut ::libc::c_void)
                              -> ::libc::c_int>;
pub type lzo_decompress_t =
    ::std::option::Option<unsafe extern "C" fn(src: *const ::libc::c_uchar,
                                               src_len: lzo_uint,
                                               dst: *mut ::libc::c_uchar,
                                               dst_len: *mut lzo_uint,
                                               wrkmem: *mut ::libc::c_void)
                              -> ::libc::c_int>;
pub type lzo_optimize_t =
    ::std::option::Option<unsafe extern "C" fn(src: *mut ::libc::c_uchar,
                                               src_len: lzo_uint,
                                               dst: *mut ::libc::c_uchar,
                                               dst_len: *mut lzo_uint,
                                               wrkmem: *mut ::libc::c_void)
                              -> ::libc::c_int>;
pub type lzo_compress_dict_t =
    ::std::option::Option<unsafe extern "C" fn(src: *const ::libc::c_uchar,
                                               src_len: lzo_uint,
                                               dst: *mut ::libc::c_uchar,
                                               dst_len: *mut lzo_uint,
                                               wrkmem: *mut ::libc::c_void,
                                               dict: *const ::libc::c_uchar,
                                               dict_len: lzo_uint)
                              -> ::libc::c_int>;
pub type lzo_decompress_dict_t =
    ::std::option::Option<unsafe extern "C" fn(src: *const ::libc::c_uchar,
                                               src_len: lzo_uint,
                                               dst: *mut ::libc::c_uchar,
                                               dst_len: *mut lzo_uint,
                                               wrkmem: *mut ::libc::c_void,
                                               dict: *const ::libc::c_uchar,
                                               dict_len: lzo_uint)
                              -> ::libc::c_int>;
pub type lzo_callback_t = Struct_lzo_callback_t;
pub type lzo_alloc_func_t =
    ::std::option::Option<unsafe extern "C" fn(_self: *mut lzo_callback_t,
                                               items: lzo_uint,
                                               size: lzo_uint)
                              -> *mut ::libc::c_void>;
pub type lzo_free_func_t =
    ::std::option::Option<unsafe extern "C" fn(_self: *mut lzo_callback_t,
                                               ptr: *mut ::libc::c_void)
                              -> ()>;
pub type lzo_progress_func_t =
    ::std::option::Option<unsafe extern "C" fn(arg1: *mut lzo_callback_t,
                                               arg2: lzo_uint, arg3: lzo_uint,
                                               arg4: ::libc::c_int) -> ()>;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_lzo_callback_t {
    pub nalloc: lzo_alloc_func_t,
    pub nfree: lzo_free_func_t,
    pub nprogress: lzo_progress_func_t,
    pub user1: *mut ::libc::c_void,
    pub user2: lzo_uint,
    pub user3: lzo_uint,
}
impl ::std::clone::Clone for Struct_lzo_callback_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_lzo_callback_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Union_Unnamed2 {
    pub _bindgen_data_: [u64; 1usize],
}
impl Union_Unnamed2 {
    pub unsafe fn a00(&mut self) -> *mut *mut ::libc::c_void {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a01(&mut self) -> *mut *mut ::libc::c_uchar {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a02(&mut self) -> *mut lzo_uint {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a03(&mut self) -> *mut lzo_uint {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a04(&mut self) -> *mut ::libc::c_ulong {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a05(&mut self) -> *mut *mut ::libc::c_void {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a06(&mut self) -> *mut *mut ::libc::c_uchar {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a07(&mut self) -> *mut ::libc::c_ulong {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a08(&mut self) -> *mut size_t {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a09(&mut self) -> *mut ptrdiff_t {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn a10(&mut self) -> *mut ::libc::c_ulong {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for Union_Unnamed2 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Union_Unnamed2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type lzo_align_t = Union_Unnamed2;
#[repr(C)]
#[derive(Copy)]
pub struct Union_Unnamed3 {
    pub _bindgen_data_: [u64; 1usize],
}
impl Union_Unnamed3 {
    pub unsafe fn a(&mut self) -> *mut *mut ::libc::c_uchar {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn b(&mut self) -> *mut lzo_uint {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for Union_Unnamed3 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Union_Unnamed3 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __lzo_pu_u = Union_Unnamed3;
#[repr(C)]
#[derive(Copy)]
pub struct Union_Unnamed4 {
    pub _bindgen_data_: [u64; 1usize],
}
impl Union_Unnamed4 {
    pub unsafe fn a(&mut self) -> *mut *mut ::libc::c_uchar {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn b(&mut self) -> *mut ::libc::c_uint {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for Union_Unnamed4 {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Union_Unnamed4 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __lzo_pu32_u = Union_Unnamed4;
#[link(name = "lzo2")]
extern "C" {
    pub static mut lzo_cta__0: [::libc::c_int; 1usize];
    pub static mut lzo_cta__1: [::libc::c_int; 1usize];
    pub static mut lzo_cta__2: [::libc::c_int; 1usize];
    pub static mut lzo_cta__3: [::libc::c_int; 1usize];
    pub static mut lzo_cta__4: [::libc::c_int; 1usize];
    pub static mut lzo_cta__5: [::libc::c_int; 1usize];
    pub static mut lzo_cta__6: [::libc::c_int; 1usize];
    pub static mut lzo_cta__7: [::libc::c_int; 1usize];
    pub static mut lzo_cta__8: [::libc::c_int; 1usize];
    pub static mut lzo_cta__9: [::libc::c_int; 1usize];
    pub static mut lzo_cta__10: [::libc::c_int; 1usize];
    pub static mut lzo_cta__11: [::libc::c_int; 1usize];
    pub static mut lzo_cta__12: [::libc::c_int; 1usize];
    pub static mut lzo_cta__13: [::libc::c_int; 1usize];
    pub static mut lzo_cta__14: [::libc::c_int; 1usize];
    pub static mut lzo_cta__15: [::libc::c_int; 1usize];
    pub static mut lzo_cta__16: [::libc::c_int; 1usize];
    pub static mut lzo_cta__17: [::libc::c_int; 1usize];
    pub static mut lzo_cta__18: [::libc::c_int; 1usize];
    pub static mut lzo_cta__19: [::libc::c_int; 1usize];
    pub static mut lzo_cta__20: [::libc::c_int; 1usize];
    pub static mut lzo_cta__21: [::libc::c_int; 1usize];
    pub static mut lzo_cta__22: [::libc::c_int; 1usize];
    pub static mut lzo_cta__23: [::libc::c_int; 1usize];
    pub static mut lzo_cta__24: [::libc::c_int; 1usize];
    pub static mut lzo_cta__25: [::libc::c_int; 1usize];
    pub static mut lzo_cta__26: [::libc::c_int; 1usize];
    pub static mut lzo_cta__27: [::libc::c_int; 1usize];
    pub static mut lzo_cta__28: [::libc::c_int; 1usize];
    pub static mut lzo_cta__29: [::libc::c_int; 1usize];
    pub static mut lzo_cta__30: [::libc::c_int; 1usize];
    pub static mut lzo_cta__31: [::libc::c_int; 1usize];
    pub static mut lzo_cta__32: [::libc::c_int; 1usize];
    pub static mut lzo_cta__33: [::libc::c_int; 1usize];
    pub static mut lzo_cta__34: [::libc::c_int; 1usize];
    pub static mut lzo_cta__35: [::libc::c_int; 1usize];
    pub static mut lzo_cta__36: [::libc::c_int; 1usize];
    pub static mut lzo_cta__37: [::libc::c_int; 1usize];
    pub static mut lzo_cta__38: [::libc::c_int; 1usize];
    pub static mut lzo_cta__39: [::libc::c_int; 1usize];
    pub static mut lzo_cta__40: [::libc::c_int; 1usize];
    pub static mut lzo_cta__41: [::libc::c_int; 1usize];
    pub static mut lzo_cta__42: [::libc::c_int; 1usize];
    pub static mut lzo_cta__43: [::libc::c_int; 1usize];
    pub static mut lzo_cta__44: [::libc::c_int; 1usize];
    pub static mut lzo_cta__45: [::libc::c_int; 1usize];
    pub static mut lzo_cta__46: [::libc::c_int; 1usize];
    pub static mut lzo_cta__47: [::libc::c_int; 1usize];
    pub static mut lzo_cta__48: [::libc::c_int; 1usize];
    pub static mut lzo_cta__49: [::libc::c_int; 1usize];
    pub static mut lzo_cta__50: [::libc::c_int; 1usize];
    pub static mut lzo_cta__51: [::libc::c_int; 1usize];
    pub static mut lzo_cta__52: [::libc::c_int; 1usize];
    pub static mut lzo_cta__53: [::libc::c_int; 1usize];
    pub static mut lzo_cta__54: [::libc::c_int; 1usize];
    pub static mut lzo_cta__55: [::libc::c_int; 1usize];
}
#[link(name = "lzo2")]
extern "C" {
    pub fn __lzo_init_v2(arg1: ::libc::c_uint, arg2: ::libc::c_int,
                         arg3: ::libc::c_int, arg4: ::libc::c_int,
                         arg5: ::libc::c_int, arg6: ::libc::c_int,
                         arg7: ::libc::c_int, arg8: ::libc::c_int,
                         arg9: ::libc::c_int, arg10: ::libc::c_int)
     -> ::libc::c_int;
    pub fn lzo_version() -> ::libc::c_uint;
    pub fn lzo_version_string() -> *const ::libc::c_char;
    pub fn lzo_version_date() -> *const ::libc::c_char;
    pub fn _lzo_version_string() -> *const ::libc::c_char;
    pub fn _lzo_version_date() -> *const ::libc::c_char;
    pub fn lzo_memcmp(a: *const ::libc::c_void, b: *const ::libc::c_void,
                      len: lzo_uint) -> ::libc::c_int;
    pub fn lzo_memcpy(dst: *mut ::libc::c_void, src: *const ::libc::c_void,
                      len: lzo_uint) -> *mut ::libc::c_void;
    pub fn lzo_memmove(dst: *mut ::libc::c_void, src: *const ::libc::c_void,
                       len: lzo_uint) -> *mut ::libc::c_void;
    pub fn lzo_memset(buf: *mut ::libc::c_void, c: ::libc::c_int,
                      len: lzo_uint) -> *mut ::libc::c_void;
    pub fn lzo_adler32(c: ::libc::c_uint, buf: *const ::libc::c_uchar,
                       len: lzo_uint) -> ::libc::c_uint;
    pub fn lzo_crc32(c: ::libc::c_uint, buf: *const ::libc::c_uchar,
                     len: lzo_uint) -> ::libc::c_uint;
    pub fn lzo_get_crc32_table() -> *const ::libc::c_uint;
    pub fn _lzo_config_check() -> ::libc::c_int;
    pub fn __lzo_align_gap(p: *const ::libc::c_void, size: lzo_uint)
     -> ::libc::c_uint;
    pub fn lzo1x_1_compress(src: *const ::libc::c_uchar, src_len: lzo_uint,
                            dst: *mut ::libc::c_uchar, dst_len: *mut lzo_uint,
                            wrkmem: *mut ::libc::c_void) -> ::libc::c_int;
    pub fn lzo1x_decompress(src: *const ::libc::c_uchar, src_len: lzo_uint,
                            dst: *mut ::libc::c_uchar, dst_len: *mut lzo_uint,
                            wrkmem: *mut ::libc::c_void) -> ::libc::c_int;
    pub fn lzo1x_decompress_safe(src: *const ::libc::c_uchar,
                                 src_len: lzo_uint, dst: *mut ::libc::c_uchar,
                                 dst_len: *mut lzo_uint,
                                 wrkmem: *mut ::libc::c_void)
     -> ::libc::c_int;
}
